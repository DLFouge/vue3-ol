import {
  ImageState_default
} from "./chunk-R7HSF55M.js";
import {
  State_default
} from "./chunk-OIGY3JBW.js";
import {
  EventType_default,
  Observable_default
} from "./chunk-POSIMZXH.js";
import {
  abstract
} from "./chunk-2WYEPIST.js";

// node_modules/ol/renderer/Layer.js
var __extends = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var LayerRenderer = function(_super) {
  __extends(LayerRenderer2, _super);
  function LayerRenderer2(layer) {
    var _this = _super.call(this) || this;
    _this.ready = true;
    _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);
    _this.layer_ = layer;
    _this.declutterExecutorGroup = null;
    return _this;
  }
  LayerRenderer2.prototype.getFeatures = function(pixel) {
    return abstract();
  };
  LayerRenderer2.prototype.getData = function(pixel) {
    return null;
  };
  LayerRenderer2.prototype.prepareFrame = function(frameState) {
    return abstract();
  };
  LayerRenderer2.prototype.renderFrame = function(frameState, target) {
    return abstract();
  };
  LayerRenderer2.prototype.loadedTileCallback = function(tiles, zoom, tile) {
    if (!tiles[zoom]) {
      tiles[zoom] = {};
    }
    tiles[zoom][tile.tileCoord.toString()] = tile;
    return void 0;
  };
  LayerRenderer2.prototype.createLoadedTileFinder = function(source, projection, tiles) {
    return function(zoom, tileRange) {
      var callback = this.loadedTileCallback.bind(this, tiles, zoom);
      return source.forEachLoadedTile(projection, zoom, tileRange, callback);
    }.bind(this);
  };
  LayerRenderer2.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, matches) {
    return void 0;
  };
  LayerRenderer2.prototype.getDataAtPixel = function(pixel, frameState, hitTolerance) {
    return null;
  };
  LayerRenderer2.prototype.getLayer = function() {
    return this.layer_;
  };
  LayerRenderer2.prototype.handleFontsChanged = function() {
  };
  LayerRenderer2.prototype.handleImageChange_ = function(event) {
    var image = event.target;
    if (image.getState() === ImageState_default.LOADED) {
      this.renderIfReadyAndVisible();
    }
  };
  LayerRenderer2.prototype.loadImage = function(image) {
    var imageState = image.getState();
    if (imageState != ImageState_default.LOADED && imageState != ImageState_default.ERROR) {
      image.addEventListener(EventType_default.CHANGE, this.boundHandleImageChange_);
    }
    if (imageState == ImageState_default.IDLE) {
      image.load();
      imageState = image.getState();
    }
    return imageState == ImageState_default.LOADED;
  };
  LayerRenderer2.prototype.renderIfReadyAndVisible = function() {
    var layer = this.getLayer();
    if (layer.getVisible() && layer.getSourceState() == State_default.READY) {
      layer.changed();
    }
  };
  LayerRenderer2.prototype.disposeInternal = function() {
    delete this.layer_;
    _super.prototype.disposeInternal.call(this);
  };
  return LayerRenderer2;
}(Observable_default);
var Layer_default = LayerRenderer;

export {
  Layer_default
};
//# sourceMappingURL=chunk-RELS262I.js.map
